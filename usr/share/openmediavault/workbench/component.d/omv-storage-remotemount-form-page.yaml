version: "1.0"
type: component
data:
  name: omv-storage-remotemount-form-page
  type: formPage
  config:
    request:
      service: RemoteMount
      get:
        method: get
        params:
          uuid: "{{ _routeParams.uuid }}"
      post:
        method: set
    fields:
      - type: confObjUuid
      - type: hidden
        name: mntentref
        value: "{{ newconfobjuuid }}"
      - type: select
        name: mounttype
        label: _("Mount type")
        value: "cifs"
        store:
          data:
            - ['nfs', _('NFS')]
            - ['cifs', _('SMB/CIFS')]
            - ['davfs', _('DAVFS')]
#            - ['s3fs', _('S3Fs')]
      - type: textInput
        name: name
        label: _("Name")
        value: ""
        modifiers:
          type: disabled
          constraint:
            operator: ne
            arg0:
              prop: mntentref
            arg1: "{{ newconfobjuuid }}"
        validators:
          required: true
          patternType: wordChars
      - type: textInput
        name: server
        label: _("Server")
        value: ""
        hint: _('Use FQDN, hostname, IP address, or url (s3fs only).')
      - type: textInput
        name: sharename
        label: _("Share")
        value: ""
        hint: _('For SMB/CIFS or NFS v4, use the share name only.<br />For NFS v3, use the export path (ie /export/nfs_share_name).<br />For S3Fs, use the bucket name.')
        modifiers:
          - type: hidden
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "davfs"
        validators:
          required: true
          patternType: wordChars
      - type: checkbox
        name: nfs4
        label: _("NFS v4")
        value: false
        hint: _('Will use NFS v3 if unchecked and NFS v4 if checked.')
        modifiers:
          - type: hidden
            constraint:
              operator: ne
              arg0:
                prop: mounttype
              arg1: "nfs"
      - type: textInput
        name: username
        label: _("Username")
        value: ""
        hint: _('Leave blank to authenticate as guest.<br />For S3Fs, this is the access key ID.')
        modifiers:
          - type: hidden
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "nfs"
      - type: passwordInput
        name: password
        label: _("Password")
        value: ""
        hint: "For S3Fs, this is secret access key."
        modifiers:
          - type: hidden
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "nfs"
      - type: textInput
        name: options
        label: _("Options")
        value: "iocharset=utf8,vers=3.0,nofail"
        hint: _('For SMB/CIFS options, see man page for <a href="https://linux.die.net/man/8/mount.cifs" target="_blank">mount.cifs</a><br />For NFS options, see man page for <a href="https://linux.die.net/man/8/mount.nfs" target="_blank">mount.nfs</a><br />For WebDAV options, see man page for <a href="https://linux.die.net/man/8/mount.davfs" target="_blank">mount.davfs</a><br />For S3Fs options, see man page for <a href="https://linux.die.net/man/1/s3fs" target="_blank">mount.s3fs</a>')
        modifiers:
          - type: value
            typeConfig: "iocharset=utf8,vers=3.0,nofail"
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "cifs"
          - type: value
            typeConfig: "defaults,nofail,file_mode=777,dir_mode=777"
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "davfs"
          - type: value
            typeConfig: "rsize=8192,wsize=8192,timeo=14,nofail"
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "nfs"
          - type: value
            typeConfig: "allow_other,use_path_request_style"
            constraint:
              operator: eq
              arg0:
                prop: mounttype
              arg1: "s3fs"
    buttons:
      - template: submit
        execute:
          type: url
          url: "/storage/remotemount"
      - template: cancel
        execute:
          type: url
          url: "/storage/remotemount"
